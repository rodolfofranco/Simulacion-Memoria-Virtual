/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package my.interfaz;

import java.awt.event.KeyEvent;
import javax.swing.JOptionPane;
import my.manejodememoria.Memoria;

/**
 *
 * @author rodolfo
 */
public class Direccionamiento extends javax.swing.JFrame {
    int contTecla=0;
    Memoria principal,secundaria;

    public void setPrincipal(Memoria principal) {
        this.principal = principal;
    }

    public void setSecundaria(Memoria secundaria) {
        this.secundaria = secundaria;
    }
    
    /**
     * Creates new form Direccionamiento
     */
    public Direccionamiento() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        direccionLogica = new javax.swing.JFormattedTextField();
        jButton1 = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        idProceso = new javax.swing.JLabel();
        numPagina = new javax.swing.JLabel();
        tamanoPagina = new javax.swing.JLabel();
        bitsPagina = new javax.swing.JLabel();
        bitsDesplazamiento = new javax.swing.JLabel();
        fisicaBinario = new javax.swing.JLabel();
        fisicaHex = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Oxygen Mono", 1, 18)); // NOI18N
        jLabel1.setText("Direccionamiento");

        jLabel2.setText("ID Proceso:");

        jLabel3.setText("Numero de Paginas:");

        jLabel4.setText("Tamano de Pagina:");

        jLabel5.setText("Tamano de Direccion Logica:");

        jLabel6.setText("Bits de Numero de Pagina:");

        jLabel7.setText("Bits de Desplazamiento:");

        jLabel8.setText("Direccion Logica:");

        direccionLogica.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                direccionLogicaKeyTyped(evt);
            }
        });

        jButton1.setText("Traducir");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("Lucida Sans", 1, 15)); // NOI18N
        jLabel9.setText("Direccion Fisica:");

        jButton2.setText("Volver");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel11.setText("Binario:");

        jLabel12.setText("Hexadecimal:");

        jLabel10.setText("16 bits");

        jLabel13.setText("Bytes");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(idProceso))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(numPagina))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(bitsPagina))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(bitsDesplazamiento))
                    .addComponent(jLabel8)
                    .addComponent(jLabel9)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                            .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(direccionLogica, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 262, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel11)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(fisicaBinario))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel12)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(fisicaHex))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel10))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tamanoPagina)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel13)))
                .addContainerGap(30, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(idProceso))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(numPagina))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(tamanoPagina)
                    .addComponent(jLabel13))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jLabel10))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(bitsPagina))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(bitsDesplazamiento))
                .addGap(27, 27, 27)
                .addComponent(jLabel8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(direccionLogica, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2))
                .addGap(26, 26, 26)
                .addComponent(jLabel9)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(fisicaBinario))
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(fisicaHex))
                .addContainerGap(39, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        
        //Si la direccion es de menor tamano se indica que se debe cumplir el requerimiento
        if(direccionLogica.getText().length() < 16){
            JOptionPane.showMessageDialog(null, "La direccion tiene que ser de 16 bits!");
        }//Se ejecuta el codigo de direccionamiento
        else{
        int id = Integer.valueOf(idProceso.getText());
        int cont=0;
        
        int cantDesplazamiento = Integer.valueOf(bitsDesplazamiento.getText());
        int cantNumPagina = Integer.valueOf(bitsPagina.getText());
        
        String desplazamiento = bitsDesplazamiento.getText();
        String pagina = bitsPagina.getText();
        
        System.out.println("BINARIO:");
        String desp = direccionLogica.getText().substring(16 - cantDesplazamiento, 16);
        System.out.println("desplazamiento es: "+desp);
        String numPag = direccionLogica.getText().substring(0,16-cantDesplazamiento);
        System.out.println("num de pagina es: "+numPag);
        
        int[] vecPag = new int[principal.checkMarcosUsadosID(id) + secundaria.checkMarcosUsadosID(id)];
        String[] vecMem = new String[vecPag.length];
        
        for(int i = 0; i < vecPag.length; i++){
            vecPag[i]=i;
        }
        
        int aux = principal.parearTabla(vecMem, id, cont,vecPag);
        int pointer = secundaria.parearTabla(vecMem, id, aux,vecPag);
        
        int d = Integer.parseInt(desp,2);
        int n = Integer.parseInt(numPag,2);
        System.out.println("DECIMAL");
        System.out.println("La cantidad a desplazar es: "+d);
        System.out.println("El numero de la pagina es: "+n);
        
        boolean validacion = false;
        
        for (int i = 0; i < vecMem.length; i++) {
            System.out.println("Memoria: ["+vecMem[i]+"]");
            System.out.println("Pagina "+(i+1)+" en el Marco de Pagina: ["+vecPag[i]+"]");
        }
        
        for(int i = 0 ; i < vecMem.length ; i++){
            if(i+1 == n && "P".equals(vecMem[i])){
                System.out.println("La direccion logica referencia a una pagina en MP!");
                System.out.println("La direccion fisica seria: "+vecPag[i]+" "+d);
                String direccionFisica = Integer.toBinaryString(vecPag[i])+desp;
                if(direccionFisica.length()<16){
                    int cant = 16 - direccionFisica.length();
                    int auxCont=0;
                    String s="";
                    while(auxCont<cant){
                         s = s+"0";
                         auxCont++;
                    }
                    String definitiva = s.concat(direccionFisica);
                    System.out.println("DIRECCION FISICA :"+definitiva);
                    
                    
                    
                    
                    String despHex = definitiva.substring(16 - cantDesplazamiento, 16);
                 
                    String numHex = definitiva.substring(0,16-cantDesplazamiento);
                    fisicaBinario.setText(numHex + " - " + despHex);
                    
                    
                    int dec = Integer.parseInt(despHex, 2);
                    int dec2 = Integer.parseInt(numHex,2);

                    String hex = "0x"+Integer.toString(dec2, 16) +" - "+ "0x"+Integer.toString(dec,16);
                    fisicaHex.setText(hex);
                    validacion = true;
                    break;
                }
                else{
                    
                    String despHex = direccionFisica.substring(16 - cantDesplazamiento, 16);
                 
                    String numHex = direccionFisica.substring(0,16-cantDesplazamiento);
                    
                    fisicaBinario.setText(numHex + " - "+ despHex);
                    int dec = Integer.parseInt(despHex, 2);
                    int dec2 = Integer.parseInt(numHex,2);

                    String hex = "0x"+Integer.toString(dec2, 16) +" - "+ "0x"+Integer.toString(dec,16);
                    fisicaHex.setText(hex);
                    validacion = true;
                    break;
          
                }
            }
            else if(i+1 == n && vecMem[i]=="S"){
                System.out.println("La direccion logica referencia a una pagina en MS");
                JOptionPane.showMessageDialog(null, "La direccion hace referencia a una pagina en Memoria Secundaria!");
                fisicaBinario.setText("");
                fisicaHex.setText("");
                validacion = true;
                break;
            }
        }
        
        
        if(validacion == false){
            JOptionPane.showMessageDialog(null, "La direccion logica no apunta a ninguna pagina en ninguna memoria!");
                fisicaBinario.setText("");
                fisicaHex.setText("");
        }
        
        }
        
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        setVisible(false);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void direccionLogicaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_direccionLogicaKeyTyped
        // TODO add your handling code here:
        char c=evt.getKeyChar();
        
            if(c == KeyEvent.VK_BACK_SPACE && contTecla>0){
                contTecla--;
            }
            else{
 
       
                if(!(Character.getNumericValue(c)==1 || Character.getNumericValue(c)==0)){
                    getToolkit().beep();
                    evt.consume();
                }

                if(contTecla>=16){
                    getToolkit().beep();
                    evt.consume();
                    JOptionPane.showMessageDialog(null, "Las direcciones son de 16 bits, introduzca otra vez");
                    direccionLogica.setText("");
                    contTecla=0;
                }
                else{
                    contTecla++;
                }
            }
    }//GEN-LAST:event_direccionLogicaKeyTyped

    
    public void setIdProceso(int idPro) {
        idProceso.setText(String.valueOf(idPro));
    }
    
    public void setNumPagina(int num) {
        numPagina.setText(String.valueOf(num));
    }

    public void setTamanoPagina(int tamano) {
        tamanoPagina.setText(String.valueOf(tamano));
    }

    public void setBitsDesplazamiento(int desplazamiento) {
        bitsDesplazamiento.setText(String.valueOf(desplazamiento));
    }

    public void setBitsPagina(int bitsP) {
        bitsPagina.setText(String.valueOf(bitsP));
    }
    
    
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Direccionamiento.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Direccionamiento.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Direccionamiento.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Direccionamiento.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Direccionamiento().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel bitsDesplazamiento;
    private javax.swing.JLabel bitsPagina;
    private javax.swing.JTextField direccionLogica;
    private javax.swing.JLabel fisicaBinario;
    private javax.swing.JLabel fisicaHex;
    private javax.swing.JLabel idProceso;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel numPagina;
    private javax.swing.JLabel tamanoPagina;
    // End of variables declaration//GEN-END:variables
}
