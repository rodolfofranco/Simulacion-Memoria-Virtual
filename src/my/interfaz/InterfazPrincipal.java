/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package my.interfaz;

import java.awt.event.KeyEvent;
import javax.swing.DefaultListModel;
import javax.swing.JList;
import javax.swing.JOptionPane;
import my.manejodememoria.Memoria;
import my.manejodememoria.Proceso;

/**
 *
 * @author rodolfo
 */
public class InterfazPrincipal extends javax.swing.JFrame {
    
    //Declaracion de Variables a utilizar
    private int numP,numS,pagina,cont,contS;
    private Memoria principal,secundaria;
    private DefaultListModel modelListoActivo,modelListoBloqueado,modelSuspActivo,modelSuspBloqueado;
    
    //Setters de Variables
     public void setContS(int contS) {
        this.contS = contS;
    }

    public void setPrincipal(Memoria principal) {
        this.principal = principal;
    }

    public void setSecundaria(Memoria secundaria) {
        this.secundaria = secundaria;
    }
    

    public void setCont(int cont) {
        this.cont = cont;
    }

    public void setNumP(int numP) {
        this.numP = numP;
    }

    public void setNumS(int numS) {
        this.numS = numS;
    }

    public void setPagina(int pagina) {
        this.pagina = pagina;
    }
    /**
     * Creates new form InterfazPrincipal
     */
    public InterfazPrincipal() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        tamanoProceso = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        listaPListo = new javax.swing.JList<>();
        jLabel11 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        listaPBloqueado = new javax.swing.JList<>();
        jLabel12 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        listaSListo = new javax.swing.JList<>();
        jScrollPane5 = new javax.swing.JScrollPane();
        listaSBloqueado = new javax.swing.JList<>();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jButton9 = new javax.swing.JButton();
        jButton10 = new javax.swing.JButton();
        jButton11 = new javax.swing.JButton();
        jButton12 = new javax.swing.JButton();
        jButton13 = new javax.swing.JButton();
        jButton14 = new javax.swing.JButton();
        jButton15 = new javax.swing.JButton();
        jButton16 = new javax.swing.JButton();
        jButton17 = new javax.swing.JButton();
        jButton18 = new javax.swing.JButton();
        jButton19 = new javax.swing.JButton();
        jButton20 = new javax.swing.JButton();
        jButton21 = new javax.swing.JButton();
        jButton22 = new javax.swing.JButton();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        principalDisponible = new javax.swing.JLabel();
        secundariaDisponible = new javax.swing.JLabel();
        marcoPDisponible = new javax.swing.JLabel();
        marcoPUtilizado = new javax.swing.JLabel();
        marcoSDisponible = new javax.swing.JLabel();
        marcoSUtilizado = new javax.swing.JLabel();
        procesosCreados = new javax.swing.JLabel();
        procesosSistema = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Impact", 0, 24)); // NOI18N
        jLabel1.setText("Estadisticas ");
        jLabel1.setToolTipText("");

        jLabel2.setFont(new java.awt.Font("Noto Sans", 0, 13)); // NOI18N
        jLabel2.setText("Procesos Creados:");

        jLabel3.setFont(new java.awt.Font("Noto Sans", 0, 13)); // NOI18N
        jLabel3.setText("Procesos en Sistema:");

        jLabel4.setFont(new java.awt.Font("Noto Sans", 0, 13)); // NOI18N
        jLabel4.setText("Marcos de Pagina Disponibles:");

        jLabel5.setFont(new java.awt.Font("Noto Sans", 0, 13)); // NOI18N
        jLabel5.setText("Marcos de Pagina Utilizados:");

        jLabel6.setFont(new java.awt.Font("Noto Sans", 0, 13)); // NOI18N
        jLabel6.setText("Memoria Principal Disponible:");

        jLabel7.setFont(new java.awt.Font("Noto Sans", 0, 13)); // NOI18N
        jLabel7.setText("Crear Proceso:");

        jLabel8.setFont(new java.awt.Font("Impact", 0, 24)); // NOI18N
        jLabel8.setText("Administracion de Procesos");
        jLabel8.setToolTipText("");

        jLabel9.setFont(new java.awt.Font("Noto Sans", 0, 13)); // NOI18N
        jLabel9.setText("Memoria Secundaria Disponible:");

        tamanoProceso.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                tamanoProcesoKeyTyped(evt);
            }
        });

        jButton1.setText("Nuevo Proceso");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel10.setText("Bytes");

        modelListoActivo = new DefaultListModel();
        listaPListo.setModel(modelListoActivo);
        jScrollPane2.setViewportView(listaPListo);

        jLabel11.setFont(new java.awt.Font("Noto Sans", 1, 15)); // NOI18N
        jLabel11.setText("Procesos Listos");

        modelListoBloqueado = new DefaultListModel();
        listaPBloqueado.setModel(modelListoBloqueado);
        jScrollPane3.setViewportView(listaPBloqueado);

        jLabel12.setFont(new java.awt.Font("Noto Sans", 1, 15)); // NOI18N
        jLabel12.setText("Procesos Bloqueados");

        modelSuspActivo = new DefaultListModel();
        listaSListo.setModel(modelSuspActivo);
        jScrollPane4.setViewportView(listaSListo);

        modelSuspBloqueado = new DefaultListModel();
        listaSBloqueado.setModel(modelSuspBloqueado);
        jScrollPane5.setViewportView(listaSBloqueado);

        jLabel13.setText("Activos");

        jLabel14.setText("Suspendidos");

        jLabel15.setText("Activos");

        jLabel16.setText("Suspendidos");

        jButton9.setText("Bloquear");
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });

        jButton10.setText("Bloquear");
        jButton10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton10ActionPerformed(evt);
            }
        });

        jButton11.setText("Desbloquear");
        jButton11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton11ActionPerformed(evt);
            }
        });

        jButton12.setText("Desbloquear");
        jButton12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton12ActionPerformed(evt);
            }
        });

        jButton13.setText("Suspender");
        jButton13.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton13ActionPerformed(evt);
            }
        });

        jButton14.setText("Activar");
        jButton14.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton14ActionPerformed(evt);
            }
        });

        jButton15.setText("Suspender");
        jButton15.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton15ActionPerformed(evt);
            }
        });

        jButton16.setText("Activar");
        jButton16.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton16ActionPerformed(evt);
            }
        });

        jButton17.setText("Eliminar");
        jButton17.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton17ActionPerformed(evt);
            }
        });

        jButton18.setText("Eliminar");
        jButton18.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton18ActionPerformed(evt);
            }
        });

        jButton19.setText("Eliminar");
        jButton19.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton19ActionPerformed(evt);
            }
        });

        jButton20.setText("Eliminar");
        jButton20.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton20ActionPerformed(evt);
            }
        });

        jButton21.setText("Traducir");
        jButton21.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton21ActionPerformed(evt);
            }
        });

        jButton22.setText("SALIR");
        jButton22.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton22ActionPerformed(evt);
            }
        });

        jLabel17.setFont(new java.awt.Font("Impact", 1, 15)); // NOI18N
        jLabel17.setText("Memoria Principal");

        jLabel18.setFont(new java.awt.Font("Impact", 1, 15)); // NOI18N
        jLabel18.setText("Memoria Secundaria");

        jLabel19.setFont(new java.awt.Font("Noto Sans", 0, 13)); // NOI18N
        jLabel19.setText("Marcos de Pagina Disponibles:");

        jLabel20.setFont(new java.awt.Font("Noto Sans", 0, 13)); // NOI18N
        jLabel20.setText("Marcos de Pagina Utilizados:");

        jLabel21.setFont(new java.awt.Font("Impact", 1, 15)); // NOI18N
        jLabel21.setText("Espacio Disponible");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel13)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 108, Short.MAX_VALUE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                                        .addGap(64, 64, 64)))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addGap(90, 90, 90)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(jButton10)
                                                    .addComponent(jButton14)
                                                    .addComponent(jButton19)))
                                            .addGroup(layout.createSequentialGroup()
                                                .addGap(80, 80, 80)
                                                .addComponent(jLabel14)))
                                        .addGap(137, 137, 137))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(129, 129, 129))))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(jLabel2)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(procesosCreados)))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel3)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(procesosSistema)))
                                .addGap(31, 31, 31)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel18)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel20)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(marcoSUtilizado))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel19)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(marcoSDisponible)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jButton9)
                                    .addComponent(jButton13)
                                    .addComponent(jButton17))
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton15)
                            .addComponent(jButton18)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                        .addGap(74, 74, 74)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jButton12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton16)
                            .addComponent(jButton20)
                            .addComponent(jLabel16)
                            .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addGap(476, 476, 476)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(marcoPUtilizado))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(marcoPDisponible))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(jLabel6)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(principalDisponible))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(jLabel9)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(secundariaDisponible))
                            .addComponent(jLabel17, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel21, javax.swing.GroupLayout.Alignment.LEADING))
                        .addContainerGap(71, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton21, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton22, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(109, 109, 109))))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 287, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(121, 121, 121))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel7)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel11)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(tamanoProceso, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel10)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel12)
                .addGap(86, 86, 86))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel17)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(marcoPDisponible))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(marcoPUtilizado))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel21)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(principalDisponible))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel9)
                            .addComponent(secundariaDisponible)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel2)
                                    .addComponent(procesosCreados))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel3)
                                    .addComponent(procesosSistema)))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel18)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel19)
                                    .addComponent(marcoSDisponible))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel20)
                                    .addComponent(marcoSUtilizado))))
                        .addGap(23, 23, 23)
                        .addComponent(jLabel8)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(tamanoProceso, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel10)
                            .addComponent(jButton1))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 13, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel11)
                            .addComponent(jLabel12))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel14)
                            .addComponent(jLabel15)
                            .addComponent(jLabel13)
                            .addComponent(jLabel16))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton9)
                    .addComponent(jButton10)
                    .addComponent(jButton11)
                    .addComponent(jButton12))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton13)
                    .addComponent(jButton14)
                    .addComponent(jButton15)
                    .addComponent(jButton16))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton17)
                    .addComponent(jButton18)
                    .addComponent(jButton19)
                    .addComponent(jButton20))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton21)
                    .addComponent(jButton22))
                .addGap(49, 49, 49))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        //Area donde se ejecuta la creacion de procesos
        
        //Si el tamano del proceso es 0 o no se ingresa ningun tamano, no se crea
        if(Integer.valueOf(tamanoProceso.getText())== 0 || "".equals(tamanoProceso.getText())){
            JOptionPane.showMessageDialog(null, "El proceso no puede ser creado");
        }//Seccion donde se hace procede a crear
        else{
        int numeroPagina = Integer.valueOf(tamanoProceso.getText())/pagina + ((Integer.valueOf(tamanoProceso.getText()) % pagina == 0) ? 0 : 1);
        int mitadPagina = numeroPagina/2 +((numeroPagina % 2 == 0) ? 0 : 1);
        
        int disponiblesPrincipal = principal.checkMarcosDisponibles();
        int disponiblesSecundaria = secundaria.checkMarcosDisponibles();
        
        if(disponiblesPrincipal >= numeroPagina){
            System.out.println("Todas las paginas entran a MP");
            Proceso p = new Proceso(numeroPagina,cont);
            cont++;
            contS++;
            principal.almacenarProceso(numeroPagina,cont);
            principal.showMemoria();
            procesosCreados.setText(String.valueOf(cont));
            modelListoActivo.addElement("Proceso "+cont);

            
        }else if(disponiblesPrincipal >= mitadPagina && secundaria.checkMarcosDisponibles()>= mitadPagina){
            System.out.println("Entran por lo menos la mitad a MP y el resto a MS");
            Proceso p = new Proceso(numeroPagina,cont);
            cont++;
            contS++;
            principal.almacenarProceso(numeroPagina,cont);
            int cantidad = principal.checkMarcosUsadosID(cont);
            int insertSecundaria = numeroPagina - cantidad;
            secundaria.almacenarProceso(insertSecundaria,cont);
            principal.showMemoria();
            secundaria.showMemoria();
            procesosCreados.setText(String.valueOf(cont));
            modelListoActivo.addElement("Proceso "+cont);
            
        }else if(disponiblesSecundaria >= numeroPagina){
            System.out.println("El proceso se almacena en MS");
            Proceso p = new Proceso(numeroPagina,cont);
            cont++;
            contS++;
            secundaria.almacenarProceso(numeroPagina,cont);
            secundaria.showMemoria();
            procesosCreados.setText(String.valueOf(cont));
            modelSuspActivo.addElement("Proceso "+cont);
            
        }else{
            System.out.println("El proceso no se crea");
            JOptionPane.showMessageDialog(null, "No hay espacio disponible para crear el Proceso!");
        }
        
        updateGUI();
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    //Funcion para actualizar la Interfaz Grafica
    private void updateGUI(){
        
        procesosSistema.setText(String.valueOf(contS));
        
        int pDisponible = principal.memoriaDisponible();
        int sDisponible = secundaria.memoriaDisponible();
        principalDisponible.setText(String.valueOf(pDisponible) + " Bytes");
        secundariaDisponible.setText(String.valueOf(sDisponible) + " Bytes");
        
        int marcoPDisponibles = principal.checkMarcosDisponibles();
        int marcoPUtilizados = principal.getMarcoPagina() - principal.checkMarcosDisponibles();
        marcoPDisponible.setText(String.valueOf(marcoPDisponibles));
        marcoPUtilizado.setText(String.valueOf(marcoPUtilizados));
        
        int marcoSDisponibles = secundaria.checkMarcosDisponibles();
        int marcoSUtilizados = secundaria.getMarcoPagina() - secundaria.checkMarcosDisponibles();
        marcoSDisponible.setText(String.valueOf(marcoSDisponibles));
        marcoSUtilizado.setText(String.valueOf(marcoSUtilizados));
    }
    
    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        // TODO add your handling code here:
        
        if(validarSeleccion(listaPListo)==true){
            
        }
        else{
            String palabra = listaPListo.getSelectedValue();
            String almostId = palabra.replaceAll("[^0-9]", "");
            
            int id = Integer.parseInt(almostId);

            modelListoActivo.removeElementAt(listaPListo.getSelectedIndex());
            modelListoBloqueado.addElement("Proceso "+id);

            updateGUI();
        }
    }//GEN-LAST:event_jButton9ActionPerformed

    //Funcion para hacer el calculo de los bits necesarios para el desplazamiento
    private int calculoBits(int tamano){
        int desplazamiento = 0;
        int res;
        
        do{
            tamano = tamano / 2;
            res = tamano;
            desplazamiento++;
        }while(res>1);
        
        return desplazamiento;
    }
            
    
    private void jButton21ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton21ActionPerformed
        // TODO add your handling code here:
        
        //Boton de traducir, se encarga de mandar los datos requeridos del proceso a la interfaz de Direccionamiento
        
        if(validarSeleccion(listaPListo)){
            
        }
        else{
        String palabra = listaPListo.getSelectedValue();
        String almostId = palabra.replaceAll("[^0-9]", "");
        int id = Integer.parseInt(almostId);
        int numPagina = principal.checkMarcosUsadosID(id) + secundaria.checkMarcosUsadosID(id);
        
        Direccionamiento gui = new Direccionamiento();
        gui.setPrincipal(principal);
        gui.setSecundaria(secundaria);
        gui.setIdProceso(id);
        gui.setNumPagina(numPagina);
        gui.setTamanoPagina(pagina);
        int desp = calculoBits(pagina);
        gui.setBitsDesplazamiento(desp);
        gui.setBitsPagina(16-desp);
        gui.setVisible(true);
        }
    }//GEN-LAST:event_jButton21ActionPerformed

    private void jButton22ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton22ActionPerformed
        // TODO add your handling code here:
        //Boton de salida
        setVisible(false);
        System.exit(0);
    }//GEN-LAST:event_jButton22ActionPerformed

    private void jButton17ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton17ActionPerformed
        // TODO add your handling code here:
        
        if(validarSeleccion(listaPListo)==true){
            
        }
        else{
            String palabra = listaPListo.getSelectedValue();
            String almostId = palabra.replaceAll("[^0-9]", "");
            int id = Integer.parseInt(almostId);
            System.out.println(id);
            principal.eliminarProceso(0,id);
            secundaria.eliminarProceso(0,id);
            modelListoActivo.removeElementAt(listaPListo.getSelectedIndex());
            contS--;
            updateGUI();
        }
    }//GEN-LAST:event_jButton17ActionPerformed

    private void jButton13ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton13ActionPerformed
        // TODO add your handling code here:
        
        if(validarSeleccion(listaPListo)==true){
            
        }
        else{
            String palabra = listaPListo.getSelectedValue();
            String almostId = palabra.replaceAll("[^0-9]", "");
            int id = Integer.parseInt(almostId);

            int numPagina = principal.checkMarcosUsadosID(id);
            int dispSecun = secundaria.checkMarcosDisponibles();

            if(dispSecun >= numPagina){
                principal.eliminarProceso(0,id);
                modelListoActivo.removeElementAt(listaPListo.getSelectedIndex());
                secundaria.almacenarProceso(numPagina, id);
                modelSuspActivo.addElement("Proceso "+id);
            }
            else{
                JOptionPane.showMessageDialog(null, "No hay espacio disponible en Memoria Secundaria!");
            }
            updateGUI();
        }
    }//GEN-LAST:event_jButton13ActionPerformed
    
    //Funcion para validar la seleccion de la Lista
    private boolean validarSeleccion(JList list){
        
        if(list.getSelectedValue() == null){
            JOptionPane.showMessageDialog(null, "Debe seleccionar un proceso primero!");
            return true;
        }
        else{
            return false;
        }
    }
    
    private void jButton10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton10ActionPerformed
        // TODO add your handling code here:
        
        if(validarSeleccion(listaSListo)==true){
            
        }
        else{
            String palabra = listaSListo.getSelectedValue();
            String almostId = palabra.replaceAll("[^0-9]", "");
            int id = Integer.parseInt(almostId);

            modelSuspActivo.removeElementAt(listaSListo.getSelectedIndex());
            modelSuspBloqueado.addElement("Proceso "+id);

            updateGUI();
        }
    }//GEN-LAST:event_jButton10ActionPerformed

    private void jButton14ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton14ActionPerformed
        // TODO add your handling code here:
        
        
        if(validarSeleccion(listaSListo)==true){
            
        }
        else{
            String palabra = listaSListo.getSelectedValue();
            String almostId = palabra.replaceAll("[^0-9]", "");
            int id = Integer.parseInt(almostId);

            int numPagina = secundaria.checkMarcosUsadosID(id);
            int dispPrincipal = principal.checkMarcosDisponibles();
            int mitadPagina = numPagina/2 +((numPagina % 2 == 0) ? 0 : 1);

            if(dispPrincipal >= numPagina){
                secundaria.eliminarProceso(0,id);
                modelSuspActivo.removeElementAt(listaSListo.getSelectedIndex());
                principal.almacenarProceso(numPagina, id);
                modelListoActivo.addElement("Proceso "+id);
            }
            else if(dispPrincipal >= mitadPagina){
                secundaria.eliminarProceso(principal.checkMarcosDisponibles(),id);
                modelSuspActivo.removeElementAt(listaSListo.getSelectedIndex());
                principal.almacenarProceso(principal.checkMarcosDisponibles(), id);
                modelListoActivo.addElement("Proceso "+id);
            }
            else{
                JOptionPane.showMessageDialog(null, "No hay espacio disponible en Memoria Principal!");
            }
            updateGUI();
        }
        
    }//GEN-LAST:event_jButton14ActionPerformed

    private void jButton19ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton19ActionPerformed
        // TODO add your handling code here:
        
        if(validarSeleccion(listaSListo)==true){
            
        }
        else{
            String palabra = listaSListo.getSelectedValue();
            String almostId = palabra.replaceAll("[^0-9]", "");
            int id = Integer.parseInt(almostId);
            System.out.println(id);
            secundaria.eliminarProceso(0,id);
            modelSuspActivo.removeElementAt(listaSListo.getSelectedIndex());
            contS--;
            updateGUI();
        }
    }//GEN-LAST:event_jButton19ActionPerformed

    private void jButton11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton11ActionPerformed
        // TODO add your handling code here:
        if(validarSeleccion(listaPBloqueado)==true){
            
        }
        else{
            String palabra = listaPBloqueado.getSelectedValue();
            String almostId = palabra.replaceAll("[^0-9]", "");
            int id = Integer.parseInt(almostId);

            modelListoBloqueado.removeElementAt(listaPBloqueado.getSelectedIndex());
            modelListoActivo.addElement("Proceso "+id);

            updateGUI();
        }
    }//GEN-LAST:event_jButton11ActionPerformed

    private void jButton12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton12ActionPerformed
        // TODO add your handling code here:
        if(validarSeleccion(listaSBloqueado)==true){
            
        }
        else{
            String palabra = listaSBloqueado.getSelectedValue();
            String almostId = palabra.replaceAll("[^0-9]", "");
            int id = Integer.parseInt(almostId);

            modelSuspBloqueado.removeElementAt(listaSBloqueado.getSelectedIndex());
            modelSuspActivo.addElement("Proceso "+id);

            updateGUI();
        }
    }//GEN-LAST:event_jButton12ActionPerformed

    private void jButton18ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton18ActionPerformed
        // TODO add your handling code here:
        if(validarSeleccion(listaPBloqueado)==true){
            
        }
        else{
            String palabra = listaPBloqueado.getSelectedValue();
            String almostId = palabra.replaceAll("[^0-9]", "");
            int id = Integer.parseInt(almostId);
            System.out.println(id);
            principal.eliminarProceso(0,id);
            secundaria.eliminarProceso(0,id);
            modelListoBloqueado.removeElementAt(listaPBloqueado.getSelectedIndex());
            contS--;
            updateGUI();
            
        }

    }//GEN-LAST:event_jButton18ActionPerformed

    private void jButton20ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton20ActionPerformed
        // TODO add your handling code here:
        if(validarSeleccion(listaSBloqueado)==true){
            
        }
        else{
            String palabra = listaSBloqueado.getSelectedValue();
            String almostId = palabra.replaceAll("[^0-9]", "");
            int id = Integer.parseInt(almostId);
            System.out.println(id);
            secundaria.eliminarProceso(0,id);
            modelSuspBloqueado.removeElementAt(listaSBloqueado.getSelectedIndex());
            contS--;
            updateGUI();
          
        }

    }//GEN-LAST:event_jButton20ActionPerformed

    private void jButton15ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton15ActionPerformed
        // TODO add your handling code here:
        
        if(validarSeleccion(listaPBloqueado)==true){
            
        }
        else{
            String palabra = listaPBloqueado.getSelectedValue();
            String almostId = palabra.replaceAll("[^0-9]", "");
            int id = Integer.parseInt(almostId);

            int numPagina = principal.checkMarcosUsadosID(id);
            int dispSecun = secundaria.checkMarcosDisponibles();

            if(dispSecun >= numPagina){
                principal.eliminarProceso(0,id);
                modelListoBloqueado.removeElementAt(listaPBloqueado.getSelectedIndex());
                secundaria.almacenarProceso(numPagina, id);
                modelSuspBloqueado.addElement("Proceso "+id);
            }
            else{
                JOptionPane.showMessageDialog(null, "No hay espacio disponible en Memoria Secundaria!");
            }
            updateGUI();
        }

    }//GEN-LAST:event_jButton15ActionPerformed

    private void jButton16ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton16ActionPerformed
        // TODO add your handling code here:
        if(validarSeleccion(listaSBloqueado)==true){
            
        }
        else{
            String palabra = listaSBloqueado.getSelectedValue();
            String almostId = palabra.replaceAll("[^0-9]", "");
            int id = Integer.parseInt(almostId);

            int numPagina = secundaria.checkMarcosUsadosID(id);
            int dispPrincipal = principal.checkMarcosDisponibles();
            int mitadPagina = numPagina/2 +((numPagina % 2 == 0) ? 0 : 1);

            if(dispPrincipal >= numPagina){
                secundaria.eliminarProceso(0,id);
                modelSuspBloqueado.removeElementAt(listaSBloqueado.getSelectedIndex());
                principal.almacenarProceso(numPagina, id);
                modelListoBloqueado.addElement("Proceso "+id);
            }
            else if(dispPrincipal >= mitadPagina){
                secundaria.eliminarProceso(principal.checkMarcosDisponibles(),id);
                modelSuspBloqueado.removeElementAt(listaSBloqueado.getSelectedIndex());
                principal.almacenarProceso(principal.checkMarcosDisponibles(), id);
                modelListoBloqueado.addElement("Proceso "+id);
            }
            else{
                JOptionPane.showMessageDialog(null, "No hay espacio disponible en Memoria Principal!");
            }
            updateGUI();
        }
    }//GEN-LAST:event_jButton16ActionPerformed

    //Validacion para no introducir simbolos en el TextField donde se indica el tamano de proceso
    private void tamanoProcesoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tamanoProcesoKeyTyped
        // TODO add your handling code here:
         char c=evt.getKeyChar();
        if(!(Character.isDigit(c) || c==KeyEvent.VK_BACK_SPACE || c==KeyEvent.VK_DELETE)){
            getToolkit().beep();
            evt.consume();
        }
    }//GEN-LAST:event_tamanoProcesoKeyTyped

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(InterfazPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(InterfazPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(InterfazPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(InterfazPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new InterfazPrincipal().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton11;
    private javax.swing.JButton jButton12;
    private javax.swing.JButton jButton13;
    private javax.swing.JButton jButton14;
    private javax.swing.JButton jButton15;
    private javax.swing.JButton jButton16;
    private javax.swing.JButton jButton17;
    private javax.swing.JButton jButton18;
    private javax.swing.JButton jButton19;
    private javax.swing.JButton jButton20;
    private javax.swing.JButton jButton21;
    private javax.swing.JButton jButton22;
    private javax.swing.JButton jButton9;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JList<String> listaPBloqueado;
    private javax.swing.JList<String> listaPListo;
    private javax.swing.JList<String> listaSBloqueado;
    private javax.swing.JList<String> listaSListo;
    private javax.swing.JLabel marcoPDisponible;
    private javax.swing.JLabel marcoPUtilizado;
    private javax.swing.JLabel marcoSDisponible;
    private javax.swing.JLabel marcoSUtilizado;
    private javax.swing.JLabel principalDisponible;
    private javax.swing.JLabel procesosCreados;
    private javax.swing.JLabel procesosSistema;
    private javax.swing.JLabel secundariaDisponible;
    private javax.swing.JTextField tamanoProceso;
    // End of variables declaration//GEN-END:variables
}
